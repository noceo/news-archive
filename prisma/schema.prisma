// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Publisher {
  id            BigInt                @id @default(autoincrement())
  name          String                @db.VarChar(60)
  articles      Article[]

  @@unique([name])
}

model Author {
  id            BigInt                @id @default(autoincrement())
  name          String                @db.VarChar(60)
  type          AuthorType?
  articles      AuthorsOnArticles[]

  @@unique([name])
}

model Article {
  id              BigInt                  @id @default(autoincrement())
  title           String
  subtitle        String?
  copy            String
  published_at    DateTime
  checked_out_at  DateTime
  publisher       Publisher               @relation(fields: [publisher_id], references: [id], onDelete: Cascade)
  publisher_id    BigInt
  authors         AuthorsOnArticles[]
  categories      CategoriesOnArticles[]
  media           Media[]
}

model Category {
  id            BigInt                  @id @default(autoincrement())
  name          String                  @db.VarChar(30)
  articles      CategoriesOnArticles[]

  @@unique([name])
}

model Media {
  id          BigInt      @id @default(autoincrement())
  url         String
  width       Int?
  height      Int?
  type        MediaType
  article     Article     @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId   BigInt
}

model AuthorsOnArticles {
  author        Author   @relation(fields: [author_id], references: [id], onDelete: Cascade)
  author_id     BigInt
  article       Article  @relation(fields: [article_id], references: [id], onDelete: Cascade)
  article_id    BigInt

  @@id([author_id, article_id])
}

model CategoriesOnArticles {
  category      Category   @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id    BigInt
  article       Article    @relation(fields: [article_id], references: [id], onDelete: Cascade)
  article_id     BigInt

  @@id([category_id, article_id])
}

enum AuthorType {
  PERSON
  ORGANIZATION
}

enum MediaType {
  IMAGE
  VIDEO
}
